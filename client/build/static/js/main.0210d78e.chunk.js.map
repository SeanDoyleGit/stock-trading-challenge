{"version":3,"sources":["store/actions/portfolio.js","store/actions/actionTypes.js","store/selectors.js","components/Header/Header.js","components/NavItem/NavItem.js","axios-quandl.js","apiKeys.js","store/actions/shares.js","components/Share/Share.js","containers/Portfolio/Portfolio.js","components/Search/Search.js","containers/ManageShares/ManageShares.js","components/UpdateBalanceForm/UpdateBalanceForm.js","containers/ManageBalance/ManageBalance.js","App.js","store/reducers/portfolio.js","store/reducers/shares.js","index.js"],"names":["setBalance","balance","type","setPortfolioShares","shares","fetchBalance","dispatch","axios","get","then","response","data","getBalance","state","portfolio","getCurrentShares","getSearchValue","searchValue","getShares","header","props","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","children","StyledButton","withStyles","root","marginLeft","padding","Button","navItem","classes","react_router_dom","className","to","link","exact","instance","create","baseURL","quandl","setShareValue","symbol","value","fetchShareValue","share","requestShareValue","concat","databaseCode","apiKeys","headers","Access-Control-Allow-Origin","parseFloat","dataset_data","console","log","error","StyledHeader","height","alignItems","CardHeader","Share","cost","amountOfShares","preventTransaction","handleAmountChange","event","parseInt","target","_this","Number","isInteger","amount","isNaN","currentBalance","setState","purchaseShare","params","name","post","onPurchase","sellShare","onSell","this","_this$props","Card_default","title","subheader","CardContent_default","gutterBottom","style","green","FormControl_default","InputLabel_default","Input_default","id","onChange","endAdornment","InputAdornment_default","Button_default","onClick","disabled","Component","Portfolio","handleSharePurchase","setShares","_this2","currentShares","map","components_Share_Share","Object","assign","key","component","connect","selectors","sharesActions","portfolioActions","fetchShares","search","Search_default","InputBase_default","placeholder","input","ManageShares","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearchValueChange","setSearchValue","_","debounce","components_Search_Search","datasets","marginTop","StyledFormControl","FormControl","UpdateBalanceForm","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","balanceMethod","undefined","handleBalanceMethodChange","preventSubmit","preventDefault","handleSubmit","onSubmit","inherits","createClass","FormGroup_default","Select_default","inputProps","MenuItem_default","FormHelperText_default","startAdornment","UpdateBalanceForm_StyledButton","margin","ManageBalance","components_UpdateBalanceForm_UpdateBalanceForm","actions","theme","createMuiTheme","palette","primary","main","blue","secondary","red","typography","useNextVariants","App","styles","Header","NavItem_NavItem","react_router","path","initialState","reducer","action","newState","cloneDeep","database_code","dataset_code","replace","find","rootReducer","combineReducers","portfolioReducer","sharesReducer","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0210d78e.chunk.js","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const setBalance = ( balance ) => {\r\n    return {\r\n        type: actionTypes.SET_BALANCE,\r\n        balance\r\n    };\r\n};\r\n\r\nexport const setPortfolioShares = ( shares ) => {\r\n    return {\r\n        type: actionTypes.SET_PORTFOLIO_SHARES,\r\n        shares\r\n    };\r\n};\r\n\r\nexport const fetchBalance = () => {\r\n    return dispatch => {\r\n        axios.get('/balance').then(response => {\r\n            dispatch(setBalance(response.data.balance));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchShares = () => {\r\n    return dispatch => {\r\n        axios.get('/shares').then(response => {\r\n            dispatch(setPortfolioShares(response.data.shares));\r\n        });\r\n    };\r\n};","export const SET_BALANCE = 'SET BALANCE';\r\nexport const SET_PORTFOLIO_SHARES = 'SET PORTFOLIO SHARES';\r\nexport const SET_SEARCH_VALUE = 'SET SEARCH VALUE';\r\nexport const SET_SHARES = 'SET SHARES';\r\nexport const SET_SHARE_VALUE = 'SET SHARE VALUE';","export const getBalance = (state) => state.portfolio.balance;\r\nexport const getCurrentShares = (state) => state.portfolio.shares;\r\n\r\nexport const getSearchValue = (state) => state.shares.searchValue;\r\nexport const getShares = (state) => state.shares.shares;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst header = (props) => (\r\n    <header>\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant=\"h6\" color=\"inherit\">Stock Trading</Typography>\r\n                {props.children}\r\n            </Toolbar>\r\n        </AppBar>\r\n    </header>\r\n);\r\n\r\nexport default header;\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport './NavItem.css';\r\n\r\nexport const StyledButton = withStyles({\r\n    root: {\r\n        marginLeft: '20px',\r\n        padding: '0'\r\n    },\r\n})(Button);\r\n\r\nconst navItem = (props) => (\r\n    <StyledButton classes={{ root: \"nav-item\" }} color=\"inherit\">\r\n        <NavLink \r\n            className=\"nav-item__link\"\r\n            to={props.link}\r\n            exact={props.exact}\r\n        >\r\n            {props.children}\r\n        </NavLink>\r\n    </StyledButton>\r\n);\r\n\r\nexport default navItem;\r\n\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://www.quandl.com/api/v3/'\r\n});\r\n\r\nexport default instance;","export const quandl = 'sJV2xyb_RBtSj_is4PQv';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-quandl';\r\nimport * as apiKeys from '../../apiKeys';\r\n\r\nexport const setSearchValue = ( value ) => {\r\n    return {\r\n        type: actionTypes.SET_SEARCH_VALUE,\r\n        value\r\n    };\r\n};\r\n\r\nexport const setShares = ( shares ) => {\r\n    return {\r\n        type: actionTypes.SET_SHARES,\r\n        shares\r\n    };\r\n};\r\n\r\nexport const setShareValue = ( symbol, value ) => {\r\n    return {\r\n        type: actionTypes.SET_SHARE_VALUE,\r\n        symbol,\r\n        value\r\n    };\r\n};\r\n\r\nexport const fetchShares = (value) => {\r\n    return dispatch => {\r\n        axios.get(`datasets.json?query=${value}&per_page=10&page=1&database_code=WIKI`).then(response => {\r\n            console.log(response);\r\n            dispatch(setShares(response.data.datasets));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchShareValue = (share) => {\r\n    return dispatch => {\r\n        requestShareValue(dispatch, share);\r\n    };\r\n};\r\n\r\nfunction requestShareValue(dispatch, share) {\r\n    axios.get(`datasets/${share.databaseCode}/${share.symbol}/data.json?api_key=${apiKeys.quandl}`, { headers: { 'Access-Control-Allow-Origin': '*' }}).then(response => {\r\n        try {\r\n            let value = parseFloat(response.data.dataset_data.data[0][4]);\r\n            console.log(value);\r\n            dispatch(setShareValue(share.symbol, value));\r\n        } catch(error) {\r\n            console.error('Caught Error:', error);\r\n            requestShareValue(dispatch, share);\r\n        }\r\n    }, error => {\r\n        console.error('Caught Error:', error);\r\n        requestShareValue(dispatch, share);\r\n    });\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport green from '@material-ui/core/colors/green';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport './Share.css';\r\n\r\nexport const StyledHeader = withStyles({\r\n    root: {\r\n        height: '60px',\r\n        alignItems: 'initial'\r\n    },\r\n})(CardHeader);\r\n\r\nclass Share extends Component {\r\n\r\n    state = {\r\n        cost: 0,\r\n        amountOfShares: 0,\r\n        preventTransaction: true\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.fetchShareValue(this.props);\r\n    }\r\n\r\n    handleAmountChange = (event) => {\r\n        const amountOfShares = parseInt(event.target.value);\r\n        const cost = amountOfShares * this.props.value;\r\n        const preventTransaction = (\r\n            !Number.isInteger(amountOfShares) || \r\n            amountOfShares < 0 ||\r\n            amountOfShares > this.props.amount ||\r\n            isNaN(cost) || \r\n            cost > this.props.currentBalance\r\n        );\r\n\r\n        this.setState({ amountOfShares, cost, preventTransaction });\r\n    }\r\n\r\n    purchaseShare = () => {\r\n        this.setState({\r\n            cost: 0,\r\n            amountOfShares: 0,\r\n        })\r\n\r\n        const params = {\r\n            name: this.props.name,\r\n            databaseCode: this.props.databaseCode,\r\n            symbol: this.props.symbol,\r\n            amount: this.state.amountOfShares\r\n        };\r\n\r\n        axios.post('/purchaseShare', params).then(response => {\r\n            this.props.onPurchase(response.data);\r\n        });\r\n    }\r\n\r\n    sellShare = () => {\r\n        this.setState({\r\n            cost: 0,\r\n            amountOfShares: 0,\r\n        })\r\n\r\n        const params = {\r\n            name: this.props.name,\r\n            databaseCode: this.props.databaseCode,\r\n            symbol: this.props.symbol,\r\n            amount: this.state.amountOfShares\r\n        };\r\n\r\n        axios.post('/sellShare', params).then(response => {\r\n            this.props.onSell(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { name, symbol, value, amount, currentBalance, onPurchase } = this.props;\r\n\r\n        return (\r\n            <div className=\"share\">\r\n                <Card className='share-container'>\r\n                    <StyledHeader \r\n                        title={name}\r\n                        subheader={symbol}\r\n                    />\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant='h6'>\r\n                            value: {value ? <span style={{color: green[500]}}>${value}</span> : '...Loading'}\r\n                        </Typography>\r\n                        <FormControl>\r\n                            <InputLabel>Amount</InputLabel>\r\n                            <Input\r\n                                id='amount'\r\n                                type=\"number\"\r\n                                value={this.state.amountOfShares}\r\n                                onChange={this.handleAmountChange}\r\n                                endAdornment={ onPurchase ? null : <InputAdornment position='end'>/{amount}</InputAdornment>}\r\n                            />\r\n                        </FormControl>\r\n                        <Button \r\n                            classes={{ root: `${onPurchase ? 'share__buy-button' : 'share__sell-button'}` }}\r\n                            onClick={onPurchase ? this.purchaseShare : this.sellShare}\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            disabled={this.state.preventTransaction}\r\n                        >\r\n                            {onPurchase ? 'Buy' : 'Sell'}\r\n                        </Button>\r\n                        <div className='share__balance-container'>\r\n                            <Typography classes={{ root: 'share__balance-container__balance' }} gutterBottom variant='h6'>Balance: ${currentBalance}</Typography>\r\n                            <Typography classes={{ root: 'share__balance-container__cost' }} gutterBottom variant='h6'>{onPurchase ? 'Cost' : 'Profit'}: ${this.state.cost}</Typography>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nexport default Share;","import React, { Component } from 'react' \r\nimport { connect } from 'react-redux';\r\nimport * as selectors from '../../store/selectors';\r\nimport * as portfolioActions from '../../store/actions/portfolio';\r\nimport * as sharesActions from '../../store/actions/shares';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Share from '../../components/Share/Share';\r\n\r\nimport './Portfolio.css';\r\n\r\nclass Portfolio extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBalance();\r\n\r\n    }\r\n\r\n    handleSharePurchase = (data) => {\r\n        this.props.setBalance(data.balance);\r\n        this.props.setShares(data.shares);\r\n    }\r\n\r\n    render() {\r\n        let shares = this.props.currentShares.map(share => {\r\n            return <Share key={share.symbol} fetchShareValue={this.props.fetchShareValue} {...share} onSell={this.handleSharePurchase} currentBalance={this.props.currentBalance}/>\r\n        });\r\n\r\n        return (\r\n            <div className=\"portfolio\">\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant='h2' component='h2'>My Portfolio</Typography>\r\n                        <Typography gutterBottom variant='h5' component='h2'>Current Balance ${this.props.currentBalance}</Typography>\r\n                    </CardContent>\r\n                    <CardContent classes={{ root: 'portfolio__shares-container' }}>\r\n                        <Typography classes={{ root: 'portfolio__shares-container__title' }} gutterBottom variant='h5' component='h2'>Current Shares</Typography>\r\n                        {shares}\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentBalance: selectors.getBalance(state),\r\n        currentShares: selectors.getCurrentShares(state)\r\n    };    \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchShareValue: (symbol) => dispatch(sharesActions.fetchShareValue(symbol)),\r\n        fetchBalance: () => dispatch(portfolioActions.fetchBalance()),\r\n        fetchShares: () => dispatch(portfolioActions.fetchShares()),\r\n        setBalance: (balance) => dispatch(portfolioActions.setBalance(balance)),\r\n        setShares: (shares) => dispatch(portfolioActions.setPortfolioShares(shares)),\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(Portfolio);","import React from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\nimport './Search.css';\r\n\r\nconst search = (props) => (\r\n    <div className=\"search\">\r\n        <div className=\"search__search-icon\">\r\n            <SearchIcon />\r\n        </div>\r\n        <InputBase\r\n            value={props.value}\r\n            onChange={props.onChange}\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n                root: \"search__input-root\",\r\n                input: \"search__input\",\r\n            }}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default search;","import React, { Component } from 'react' \r\nimport { connect } from 'react-redux';\r\nimport _ from 'lodash';\r\nimport * as portfolioActions from '../../store/actions/portfolio';\r\nimport * as sharesActions from '../../store/actions/shares';\r\nimport * as selectors from '../../store/selectors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Search from '../../components/Search/Search';\r\nimport Share from '../../components/Share/Share';\r\n\r\nimport './ManageShares.css';\r\n\r\nclass ManageShares extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.fetchShares = _.debounce(this.props.fetchShares, 1000);\r\n    }\r\n\r\n    handleSearchValueChange = (event) => {\r\n        this.props.setSearchValue(event.target.value);\r\n        this.fetchShares(event.target.value);\r\n    }\r\n\r\n    handleSharePurchase = (data) => {\r\n        this.props.setBalance(data.balance);\r\n        this.props.setPortfolioShares(data.shares);\r\n    }\r\n\r\n    render() {\r\n        let shares = this.props.shares.map(share => {\r\n            return <Share key={share.symbol} fetchShareValue={this.props.fetchShareValue} {...share} onPurchase={this.handleSharePurchase} currentBalance={this.props.currentBalance}/>\r\n        });\r\n\r\n        return (\r\n            <div className=\"manage-shares\">\r\n                <Card className='manage-shares__search-container'>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant='h5' component='h2'>Look up shares</Typography>\r\n                        <Search value={this.props.searchValue} onChange={this.handleSearchValueChange}/>\r\n                    </CardContent>\r\n                    <CardContent classes={{ root: 'manage-shares__results-container' }}>\r\n                        <Typography classes={{ root: 'manage-shares__results-container__title' }} gutterBottom variant='h5' component='h2'>Results</Typography>\r\n                        {shares}\r\n                    </CardContent>\r\n                </Card>\r\n            </div>  \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentBalance: selectors.getBalance(state),\r\n        searchValue: selectors.getSearchValue(state),\r\n        shares: selectors.getShares(state)\r\n    };    \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setSearchValue: (value) => dispatch(sharesActions.setSearchValue(value)),\r\n        fetchShares: (searchValue) => dispatch(sharesActions.fetchShares(searchValue)),\r\n        fetchShareValue: (symbol) => dispatch(sharesActions.fetchShareValue(symbol)),\r\n        setBalance: (balance) => dispatch(portfolioActions.setBalance(balance)),\r\n        setPortfolioShares: (shares) => dispatch(portfolioActions.setPortfolioShares(shares))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(ManageShares);","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './UpdateBalanceForm.css';\r\n\r\nexport const StyledButton = withStyles({\r\n    root: {\r\n      marginTop: '20px'\r\n    },\r\n})(Button);\r\n\r\nconst StyledFormControl = withStyles({\r\n    root: {\r\n      marginTop: '20px'\r\n    },\r\n})(FormControl);\r\n\r\nexport class UpdateBalanceForm extends Component {\r\n\r\n    state = {\r\n        balanceMethod: 'deposit',\r\n        amount: undefined\r\n    };\r\n\r\n    handleBalanceMethodChange = (event) => {\r\n        this.setState({balanceMethod: event.target.value});\r\n    }\r\n\r\n    handleAmountChange = (event) => {\r\n        this.setState({ amount: event.target.value });\r\n    }\r\n\r\n    preventSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleSubmit = () => { \r\n        axios.post(`/${this.state.balanceMethod}`, { amount: this.state.amount }).then(response => {\r\n            this.props.onSubmit(response.data.balance);\r\n        });\r\n\r\n        this.setState({\r\n            amount: undefined\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.preventSubmit}>\r\n                <FormGroup classes={{ root: 'manage-balance__form'}}>\r\n                    <FormControl>\r\n                        <Select\r\n                            classes={{ root: 'manage-balance__form__method'}}\r\n                            value={this.state.balanceMethod}\r\n                            onChange={this.handleBalanceMethodChange}\r\n                            inputProps={{\r\n                                name: 'balanceMethod',\r\n                                id: 'balance-method',\r\n                            }}\r\n                        >\r\n                            <MenuItem value='deposit'>Deposit</MenuItem>\r\n                            <MenuItem value='withdraw'>Withdraw</MenuItem>\r\n                        </Select>\r\n                        <FormHelperText>Select the method to update your balance</FormHelperText>\r\n                    </FormControl> \r\n                    <StyledFormControl>\r\n                        <InputLabel>Amount</InputLabel>\r\n                        <Input\r\n                            id='amount'\r\n                            type=\"number\"\r\n                            value={this.amount}\r\n                            onChange={this.handleAmountChange}\r\n                            startAdornment={<InputAdornment position='start'>$</InputAdornment>}\r\n                        />\r\n                    </StyledFormControl>\r\n                    <StyledButton color=\"primary\" margin='dense' onClick={this.handleSubmit} variant='contained'>\r\n                        {this.state.balanceMethod}\r\n                    </StyledButton>\r\n                </FormGroup>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UpdateBalanceForm;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/portfolio';\r\nimport * as selectors from '../../store/selectors';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UpdateBalanceForm from '../../components/UpdateBalanceForm/UpdateBalanceForm';\r\n\r\n\r\nimport './ManageBalance.css';\r\n\r\nexport class ManageBalance extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBalance();\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <div className='manage-balance'>\r\n                <Card className='manage-balance__form-container'>\r\n                    <CardContent>\r\n                        <Typography gutterBottom variant='h5' component='h2'>Current Balance ${this.props.currentBalance}</Typography>\r\n                        <UpdateBalanceForm onSubmit={this.props.setBalance}/>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentBalance: selectors.getBalance(state)\r\n    };    \r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchBalance: () => dispatch(actions.fetchBalance()),\r\n        setBalance: (balance) => dispatch(actions.setBalance(balance))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )(ManageBalance);","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/portfolio';\nimport * as selectors from './store/selectors';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport red from '@material-ui/core/colors/red';\nimport Header from './components/Header/Header';\nimport NavItem from './components/NavItem/NavItem';\nimport Portfolio from './containers/Portfolio/Portfolio';\nimport ManageShares from './containers/ManageShares/ManageShares';\nimport ManageBalance from './containers/ManageBalance/ManageBalance';\nimport './App.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: blue[900] },\n    secondary: { main: red[500] },\n  },\n  typography: { useNextVariants: true },\n});\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.fetchBalance();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <Header>\n            <NavItem link=\"/\" exact>Portfolio</NavItem>\n            <NavItem link=\"/balance\" exact>Balance</NavItem>\n            <NavItem link=\"/shares\" exact>Shares</NavItem>\n          </Header>\n          \n          <div className=\"main\">\n            <Switch>\n              <Route path=\"/balance\" component={ManageBalance} />\n              <Route path=\"/shares\" component={ManageShares} />\n              <Route path=\"/\" component={Portfolio} />\n            </Switch>\n          </div>\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentBalance: selectors.getBalance(state)\n  };    \n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBalance: () => dispatch(actions.fetchBalance())\n  };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(App);\n","import * as actionTypes from '../actions/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n    balance: 0,\r\n    shares: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    if(action.type === actionTypes.SET_BALANCE) {\r\n        let newState = _.cloneDeep(state);\r\n        console.log('SET_BALANCE', action.balance);\r\n        newState.balance = action.balance;\r\n        return newState;\r\n    }\r\n\r\n    if(action.type === actionTypes.SET_PORTFOLIO_SHARES) {\r\n        let newState = _.cloneDeep(state);\r\n        newState.shares = action.shares;\r\n        return newState;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport _ from 'lodash';\r\n\r\nconst initialState = {\r\n    searchValue: '',\r\n    shares: []\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    if(action.type === actionTypes.SET_SEARCH_VALUE) {\r\n        let newState = _.cloneDeep(state);\r\n        newState.searchValue = action.value;\r\n        return newState;\r\n    }\r\n\r\n    if(action.type === actionTypes.SET_SHARES) {\r\n        let newState = _.cloneDeep(state);\r\n        newState.shares = (action.shares || []).map(share => {\r\n            return {\r\n                databaseCode: share.database_code,\r\n                symbol: share.dataset_code,\r\n                name: share.name.replace('Prices, Dividends, Splits and Trading Volume', '')\r\n            };\r\n        });\r\n\r\n        return newState;\r\n    }\r\n    \r\n    if(action.type === actionTypes.SET_SHARE_VALUE) {\r\n        let newState = _.cloneDeep(state);\r\n        let share = newState.shares.find(share => share.symbol === action.symbol);\r\n        \r\n        if(share) {\r\n            share.value = action.value;\r\n        }\r\n\r\n        return newState;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport portfolioReducer from './store/reducers/portfolio';\nimport sharesReducer from './store/reducers/shares';\n\nimport './index.css';\n\nconst rootReducer = combineReducers({\n    portfolio: portfolioReducer,\n    shares: sharesReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}